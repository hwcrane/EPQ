{"version":3,"sources":["components/controlls/speedSelector.tsx","algorithms.ts","components/info/description.tsx","components/sorting/progressBar.tsx","components/controlls/algoritmSelector.tsx","components/controlls/backButton.tsx","components/controlls/startStopButton.tsx","components/controlls/forwardButton.tsx","components/controlls/resetButton.tsx","components/controlls/numOBarsSelector.tsx","components/sorting/bar.tsx","components/sorting/barContainer.tsx","components/info/metrics.tsx","components/info/colourInfo.tsx","components/sorting/Sorting.tsx","components/Home.tsx","components/searching/Searching.tsx","components/pathfinding/Pathfinding.tsx","components/navigation/navLink.tsx","components/navigation/navTitle.tsx","components/navigation/navWaffle.tsx","components/navigation/navDropdownLink.tsx","components/navigation/navDropdown.tsx","components/navigation/navBar.tsx","index.tsx"],"names":["SpeedSelector","props","speed","setSpeed","current","value","React","createRef","className","type","ref","this","onChange","max","defaultValue","min","step","Component","bubble","bars","stages","comparisons","swaps","push","JSON","parse","stringify","swapped","n","length","i","state","size","Description","style","info","title","text","complexity","worst","best","average","selectedAlgorithm","display","ProgressBar","width","stage","toString","AlgoritmSelector","algorthmSelected","setAlgorithm","onInput","algorithms","map","a","indexOf","BackButton","stepBackward","onClick","icon","faStepBackward","StartStopButton","togglePlayState","buttonlbl","isRunning","faPause","faPlay","ForwardButton","stepForward","faStepForward","ResetButton","reset","faRandom","NumOBarsSelector","makeBars","Bar","col","height","maxSize","background","transition","BarContainer","bar","Metrics","ColourInfo","pause","time","Promise","resolve","setTimeout","Sorting","numOBars","sortingStages","sortingStage","stagesGenerated","newbar","b","j","Math","floor","random","setState","algorithm","runAlgorithm","alert","prevState","visulise","Home","Searching","Pathfinding","NavLink","extraclass","to","linkTo","rotation","iconRotation","NavTitle","NavWaffle","toggleMenu","faBars","NavDropdownLink","NavDropdown","extraClass","menuActive","faHome","page","faSortAmountDownAlt","faSearch","faRoute","NavBar","console","log","prevstate","ReactDOM","render","StrictMode","basename","process","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.ec61c338.chunk.js","sourcesContent":["import React from \"react\";\nimport { speedSelectorProps } from \"../../types\";\nimport \"../../App.css\";\n\n// react component for the control pannel\nexport default class SpeedSelector extends React.Component<speedSelectorProps> {\n    speed: React.RefObject<HTMLInputElement>;\n\n    constructor(props: any) {\n        super(props);\n\n        this.speed = React.createRef(); // creates a ref to be assigned to the speed slider\n    }\n\n    // calls the setSpeed method in the App class\n    setSpeed = () => {\n        var speed: any = this.speed.current?.value; // get value from range\n        this.props.setSpeed(1000 - speed);\n    };\n\n    public render() {\n        return (\n            <div className=\"speedSelectorContainer\">\n                Speed:\n                <input // speed range\n                    className=\"speedSelector\"\n                    type=\"range\"\n                    ref={this.speed} // linking to the speed ref element\n                    onChange={() => this.setSpeed()} // call the setSpeed method whenever the value of the range is changed\n                    max={1000}\n                    defaultValue={750}\n                    min={500}\n                    step={50}\n                />\n            </div>\n        );\n    }\n}\n","import { bar, stage } from \"./types\";\n\nexport const bubble = (bars: bar[]): stage[] => {\n    var stages: stage[] = [];\n    var comparisons = 0;\n    var swaps = 0;\n    stages.push({\n        bars: JSON.parse(JSON.stringify(bars)),\n        swaps: swaps,\n        comparisons: comparisons,\n    }); // push first stage to array\n\n    var swapped = true;\n    for (var n = 0; n < bars.length && swapped; n++) {\n        // stop once a pass has completed with no swaps\n        swapped = false;\n        for (var i = 0; i < bars.length - 1 - n; i++) {\n            // loops through the array, with each pass one less element needs to be checked as you know is in the correct position\n\n            // sets current bars' state\n            bars[i].state = \"selected\";\n            bars[i + 1].state = \"selected\";\n\n            comparisons++;\n\n            if (bars[i].size > bars[i + 1].size) {\n                stages.push({\n                    bars: JSON.parse(JSON.stringify(bars)),\n                    swaps: swaps,\n                    comparisons: comparisons,\n                }); // pushes step to stages\n\n                [bars[i], bars[i + 1]] = [bars[i + 1], bars[i]]; // swaps elements\n                swapped = true;\n                swaps++;\n            }\n            stages.push({\n                bars: JSON.parse(JSON.stringify(bars)),\n                swaps: swaps,\n                comparisons: comparisons,\n            }); // pushes step to stages\n\n            // sets bars back to unsorted\n            bars[i].state = \"unsorted\";\n            bars[i + 1].state = \"unsorted\";\n        }\n        bars[bars.length - n - 1].state = \"sorted\"; // sets the last bar to sorted\n        stages.push({\n            bars: JSON.parse(JSON.stringify(bars)),\n            swaps: swaps,\n            comparisons: comparisons,\n        }); // pushes step to stages\n\n        // once no swaps have been made, all the remaining bars are looped through and set to sorted\n        if (!swapped) {\n            for (var i = 0; i < bars.length - 1 - n; i++) {\n                bars[i].state = \"sorted\";\n                stages.push({\n                    bars: JSON.parse(JSON.stringify(bars)),\n                    swaps: swaps,\n                    comparisons: comparisons,\n                }); // pushes step to stages\n            }\n        }\n    }\n\n    return stages;\n};\n","import React, { CSSProperties } from \"react\";\nimport \"../../App.css\";\nimport { descriptionProps } from \"../../types\";\n\nexport default class Description extends React.Component<descriptionProps> {\n    render() {\n        var style: CSSProperties = {}; // css properties\n        var info = {\n            // sets info to be blank\n            title: \"\",\n            text: \"\",\n            complexity: {\n                comparisons: {\n                    worst: \"\",\n                    best: \"\",\n                    average: \"\",\n                },\n                swaps: {\n                    worst: \"\",\n                    best: \"\",\n                    average: \"\",\n                },\n            },\n        };\n\n        switch (this.props.selectedAlgorithm) {\n            case \"\": // if no algorithm is selected don't display\n                style.display = \"none\";\n                break;\n\n            case \"Bubble Sort\":\n                info = {\n                    title: \"Bubble Sort\",\n                    text: \"Bubble sort is one of the simplest algorithms to understand and implement. It works by repeatedly iterating through an array and continuously swapping adjacent elements until the list is in order. If you were sorting in ascending order, the algorithm would step through an array and at every step, it checks if the current element is larger than the next element. If it is, those elements are swapped. Once the algorithm reaches the end of an array, it repeats the process, starting from the begging. This results in the largest elements 'bubbling' up the array. Each iteration of the array is known as a run. You know the array is sorted once no elements are swapped in a run. This is because every element is less than the element that follows it.\",\n                    complexity: {\n                        comparisons: {\n                            worst: \"O(n^2)\",\n                            best: \"O(n)\",\n                            average: \"O(n^2)\",\n                        },\n                        swaps: {\n                            worst: \"O(n^2)\",\n                            best: \"O(1)\",\n                            average: \"O(n^2)\",\n                        },\n                    },\n                };\n                break;\n        }\n\n        return (\n            <div className=\"description\" style={style}>\n                <h1>{info.title}</h1>\n                <p>{info.text}</p>\n                {/* table to show complexity */}\n                <table>\n                    <tr>\n                        <th></th>\n                        <th>Worst Case</th>\n                        <th>Best Case</th>\n                        <th>Average</th>\n                    </tr>\n                    <tr>\n                        <th>Comparisons</th>\n                        <td>{info.complexity.comparisons.worst}</td>\n                        <td>{info.complexity.comparisons.best}</td>\n                        <td>{info.complexity.comparisons.average}</td>\n                    </tr>\n                    <tr>\n                        <th>Swaps</th>\n                        <td>{info.complexity.swaps.worst}</td>\n                        <td>{info.complexity.swaps.best}</td>\n                        <td>{info.complexity.swaps.average}</td>\n                    </tr>\n                </table>\n            </div>\n        );\n    }\n}\n","import React, { CSSProperties } from \"react\";\nimport { progressBarProps } from \"../../types\";\n\n// component for the progress bar of the visuliser\nexport default class ProgressBar extends React.Component<progressBarProps> {\n    render() {\n        var style: CSSProperties = {\n            width:\n                ((this.props.stage / (this.props.max - 1)) * 100).toString() +\n                \"%\", // sets width proportional to how far it is into the visuliation\n        };\n        return (\n            <div className=\"outerProgressBar\">\n                <div className=\"innerProgressBar\" style={style}></div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { algoritmSelectorProps } from \"../../types\";\n\nexport default class AlgoritmSelector extends React.Component<algoritmSelectorProps> {\n    ref: React.RefObject<HTMLSelectElement>;\n\n    constructor(props: algoritmSelectorProps) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    // calls the setAlgorithm method inside the app class\n    algorthmSelected = () => {\n        this.props.setAlgorithm(this.ref.current?.value);\n    };\n\n    render() {\n        return (\n            <select // Algorithm selector\n                className=\"algorithmSelect\"\n                onInput={() => this.algorthmSelected()}\n                ref={this.ref}\n            >\n                <option value=\"\">Select Algoritm</option>\n                {this.props.algorithms.map((a) => (\n                    <option value={a} key={this.props.algorithms.indexOf(a)}>\n                        {a}\n                    </option>\n                ))}\n            </select>\n        );\n    }\n}\n","import React from \"react\";\nimport { stepBackwardsProps } from \"../../types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStepBackward } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class BackButton extends React.Component<stepBackwardsProps> {\n    // calls the stepBackward method in the App class\n    stepBackward = () => {\n        this.props.stepBackward();\n    };\n\n    render() {\n        return (\n            <button\n                className=\"backButton controlButton\"\n                onClick={() => this.stepBackward()}\n            >\n                <FontAwesomeIcon size=\"2x\" icon={faStepBackward} />\n            </button>\n        );\n    }\n}\n","import { faPause, faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { startStopProps } from \"../../types\";\n\nexport default class StartStopButton extends React.Component<startStopProps> {\n    // calls the togglePlayState method in the App class\n    togglePlayState = () => {\n        this.props.togglePlayState();\n    };\n\n    render() {\n        var buttonlbl: JSX.Element;\n        if (this.props.isRunning) {\n            buttonlbl = <FontAwesomeIcon size=\"2x\" icon={faPause} />;\n        } else {\n            buttonlbl = <FontAwesomeIcon size=\"2x\" icon={faPlay} />;\n        }\n        return (\n            <button // start stop button\n                className=\"startstop controlButton\"\n                onClick={() => this.togglePlayState()}\n            >\n                {buttonlbl}\n            </button>\n        );\n    }\n}\n","import { faStepForward } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { stepForwardProps } from \"../../types\";\n\nexport default class ForwardButton extends React.Component<stepForwardProps> {\n    // calls the stepForward method in the App class\n    stepForward = () => {\n        this.props.stepForward();\n    };\n\n    render() {\n        return (\n            <button // step forward button\n                className=\"forward controlButton\"\n                onClick={() => this.stepForward()}\n            >\n                <FontAwesomeIcon size=\"2x\" icon={faStepForward} />\n            </button>\n        );\n    }\n}\n","import { faRandom } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { resetButtonProps } from \"../../types\";\n\nexport default class ResetButton extends React.Component<resetButtonProps> {\n    reset = () => {\n        this.props.reset();\n    };\n\n    render() {\n        return (\n            <button // reset button\n                className=\"reset controlButton\"\n                onClick={() => this.reset()}\n            >\n                <FontAwesomeIcon size=\"2x\" icon={faRandom} />\n            </button>\n        );\n    }\n}\n","import React from \"react\";\nimport { numOBarsSelectorProps } from \"../../types\";\n\nexport default class NumOBarsSelector extends React.Component<numOBarsSelectorProps> {\n    ref: React.RefObject<HTMLInputElement>;\n\n    constructor(props: numOBarsSelectorProps) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    // calls the makeBars method from the app class and passes in the value of the length range\n    makeBars = () => {\n        this.props.makeBars(this.ref.current?.value);\n    };\n\n    render() {\n        return (\n            <div>\n                Number of Bars :\n                <input // bat range\n                    type=\"range\"\n                    ref={this.ref} // linking the barSelect ref to the element\n                    onChange={() => this.makeBars()} // call the `makeBars` method whenever the value of the range is changed\n                    min={5}\n                    max={200}\n                />\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { CSSProperties } from \"react\";\nimport { barProps } from \"../../types\";\n\n// React element for the bars\nexport const Bar = (props: barProps) => {\n    switch (\n        props.state // bar colour determined from state\n    ) {\n        case \"unsorted\":\n            var col = \"var(--nord10)\";\n            break;\n        case \"sorted\":\n            var col = \"var(--nord14)\";\n            break;\n        case \"selected\":\n            var col = \"var(--nord11)\";\n            break;\n        case \"pivot\":\n            var col = \"var(--nord15)\";\n            break;\n    }\n\n    // CSS styles for bar\n    var style: CSSProperties = {\n        height: ((props.size / props.maxSize) * 100).toString() + \"%\",\n        background: col,\n        transition: \"height \" + props.speed * 2 + \"ms ease\",\n    };\n    return <div className=\"bar\" style={style}></div>;\n};\n","import React from \"react\";\nimport { barContainerProps } from \"../../types\";\nimport { Bar } from \"./bar\";\n\n// React element for the bar container\nexport const BarContainer = (props: barContainerProps) => {\n    return (\n        <div className=\"barContainer\">\n            {props.bars.map(\n                (\n                    bar //loop through all the array, creating a bar for each\n                ) => (\n                    <Bar\n                        size={bar.size}\n                        maxSize={props.maxSize}\n                        key={props.bars.indexOf(bar)}\n                        state={bar.state}\n                        speed={props.speed}\n                    />\n                )\n            )}\n        </div>\n    );\n};\n","import React from \"react\";\nimport { metricsProps } from \"../../types\";\n\n// React element for the Metrics\nexport const Metrics = (props: metricsProps) => {\n    return (\n        <div className=\"metrics\">\n            <span>Comparisons: {props.comparisons}</span>\n            <span>Swaps: {props.swaps}</span>\n        </div>\n    );\n};\n","import React from \"react\";\n\nexport default class ColourInfo extends React.Component {\n    render() {\n        return (\n            <ul className=\"ColourList\">\n                <li className=\"colourItem\">\n                    <div\n                        className=\"colourBox\"\n                        style={{ background: \"var(--nord10)\" }}\n                    ></div>\n                    Unsorted\n                </li>\n                <li className=\"colourItem\">\n                    <div\n                        className=\"colourBox\"\n                        style={{ background: \"var(--nord11)\" }}\n                    ></div>\n                    Selected\n                </li>\n                <li className=\"colourItem\">\n                    <div\n                        className=\"colourBox\"\n                        style={{ background: \"var(--nord15)\" }}\n                    ></div>\n                    Pivot\n                </li>\n                <li className=\"colourItem\">\n                    <div\n                        className=\"colourBox\"\n                        style={{ background: \"var(--nord14)\" }}\n                    ></div>\n                    Sorted\n                </li>\n            </ul>\n        );\n    }\n}\n","import React from \"react\";\nimport \"../../App.css\";\nimport SpeedSelector from \"../controlls/speedSelector\";\nimport { bubble } from \"../../algorithms\";\nimport { appState, bar, stage } from \"../../types\";\nimport Description from \"../info/description\";\nimport ProgressBar from \"./progressBar\";\nimport AlgoritmSelector from \"../controlls/algoritmSelector\";\nimport BackButton from \"../controlls/backButton\";\nimport StartStopButton from \"../controlls/startStopButton\";\nimport ForwardButton from \"../controlls/forwardButton\";\nimport ResetButton from \"../controlls/resetButton\";\nimport NumOBarsSelector from \"../controlls/numOBarsSelector\";\nimport { BarContainer } from \"./barContainer\";\nimport { Metrics } from \"../info/metrics\";\nimport ColourInfo from \"../info/colourInfo\";\n\n// function for creating a delay\nconst pause = (time: number) => {\n    return new Promise((resolve) => setTimeout(resolve, time));\n};\n\n// Base app\nclass Sorting extends React.Component<any, appState> {\n    componentDidMount() {\n        // runs once the component has been loaded\n        this.makeBars();\n    }\n\n    state = {\n        numOBars: 50,\n        bars: [],\n        algorithms: [\n            \"Bubble Sort\",\n            \"Quick Sort\",\n            \"Insertion Sort\",\n            \"Merge Sort\",\n            \"Selection Sort\",\n            \"Heap Sort\",\n            \"Radix Sort\",\n            \"Bucket Sort\",\n        ],\n        isRunning: false,\n        sortingStages: [],\n        sortingStage: 0,\n        selectedAlgorithm: \"\",\n        stagesGenerated: false,\n        speed: 750,\n        comparisons: 0,\n        swaps: 0,\n    };\n\n    // method to make the bars\n    // if no parameters are entered, n is taken to be the number of bars\n    makeBars = (n = this.state.numOBars) => {\n        var b = [];\n        var newbar: bar;\n        for (let i = 0; i < n; i++) {\n            // create an array b containing 1 -> n\n            newbar = { size: i + 1, state: \"unsorted\" };\n            b.push(newbar);\n        }\n\n        // shuffles array\n        for (let i = b.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            [b[i], b[j]] = [b[j], b[i]];\n        }\n\n        this.setState({\n            bars: b,\n            numOBars: n,\n            isRunning: false,\n            stagesGenerated: false,\n        }); // sets the state of bars to be b and numOBars to be n\n    };\n\n    // method to set the selected algorithm\n    setAlgorithm = (algorithm: string) => {\n        this.setState({\n            selectedAlgorithm: algorithm,\n            stagesGenerated: false,\n            isRunning: false,\n        });\n    };\n\n    // method to set the speed of the visuliser\n    setSpeed = (speed: number) => {\n        this.setState({ speed: speed });\n    };\n\n    // method to run whichever sorting algorithm is selected\n    runAlgorithm = () => {\n        var sortingStages: stage[] = [];\n        switch (\n            this.state.selectedAlgorithm // Switch statement to select the algorithm to use\n        ) {\n            case \"Bubble Sort\":\n                sortingStages = bubble(\n                    JSON.parse(JSON.stringify(this.state.bars)) // remove object refrences\n                );\n        }\n        this.setState({\n            sortingStages: sortingStages,\n            sortingStage: 0,\n            stagesGenerated: true,\n        }); // sets the sortingStages array inside the state to be the stages genetrated by the algorithm, also sets the sorting stage to 0\n    };\n\n    // method to toggle the display state of the algorithm\n    togglePlayState = async () => {\n        if (this.state.selectedAlgorithm == \"\") {\n            alert(\"No algorithm selected\");\n        } else {\n            if (!this.state.stagesGenerated) {\n                // generates the stages if not generated\n                await this.runAlgorithm();\n            }\n            await this.setState((prevState: any) => ({\n                //wait for the state to be toggled\n                isRunning: !prevState.isRunning,\n            }));\n            this.visulise();\n        }\n    };\n\n    // steps forward through the visulisation by one step\n    stepForward = async () => {\n        if (this.state.selectedAlgorithm == \"\") {\n            // checks if algorithm is selected\n            alert(\"No algorithm selected\");\n        } else {\n            if (!this.state.stagesGenerated) {\n                // runs algorithm is no steps are generated\n                await this.runAlgorithm();\n            }\n            this.setState({ isRunning: false }); // sets running to false to stop the visulisation if it is running\n            if (\n                this.state.stagesGenerated &&\n                this.state.sortingStage < this.state.sortingStages.length - 1\n            ) {\n                // sets the state to be the next stage of the sorting and increments sortingStage\n                this.setState((prevState: any) => ({\n                    bars: prevState.sortingStages[prevState.sortingStage + 1]\n                        .bars,\n                    swaps: prevState.sortingStages[prevState.sortingStage + 1]\n                        .swaps,\n                    comparisons:\n                        prevState.sortingStages[prevState.sortingStage + 1]\n                            .comparisons,\n                    sortingStage: prevState.sortingStage + 1,\n                }));\n            }\n        }\n    };\n\n    // steps backwards through the visulisation by one step\n    stepBackward = async () => {\n        if (this.state.selectedAlgorithm == \"\") {\n            // checks if algorithm is selected\n            alert(\"No algorithm selected\");\n        } else {\n            if (!this.state.stagesGenerated) {\n                // runs algorithm is no steps are generated\n                await this.runAlgorithm();\n            }\n            await this.setState({ isRunning: false }); // sets running to false to stop the visulisation if it is running\n            if (this.state.stagesGenerated && this.state.sortingStage > 0) {\n                // sets the state to be the next stage of the sorting and increments sortingStage\n                this.setState((prevState: any) => ({\n                    bars: prevState.sortingStages[prevState.sortingStage - 1]\n                        .bars,\n                    swaps: prevState.sortingStages[prevState.sortingStage - 1]\n                        .swaps,\n                    comparisons:\n                        prevState.sortingStages[prevState.sortingStage - 1]\n                            .comparisons,\n                    sortingStage: prevState.sortingStage - 1,\n                }));\n            }\n        }\n    };\n\n    // method to visulise the selected algorithm\n    visulise = async () => {\n        // checks if the visulisation is running and that there are stages left to visulise\n        if (\n            this.state.isRunning &&\n            this.state.sortingStage < this.state.sortingStages.length - 1\n        ) {\n            // sets the state to be the next stage of the sorting and increments sortingStage\n            this.setState((prevState: any) => ({\n                bars: prevState.sortingStages[prevState.sortingStage + 1].bars,\n                swaps: prevState.sortingStages[prevState.sortingStage + 1]\n                    .swaps,\n                comparisons:\n                    prevState.sortingStages[prevState.sortingStage + 1]\n                        .comparisons,\n                sortingStage: prevState.sortingStage + 1,\n            }));\n            await pause(this.state.speed); // delay\n            this.visulise(); // Calls itself to keep visulising\n        }\n    };\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"container visuliserContainer\">\n                    <BarContainer\n                        bars={this.state.bars}\n                        maxSize={this.state.numOBars}\n                        speed={this.state.speed}\n                    />\n                    <ProgressBar\n                        stage={this.state.sortingStage}\n                        max={this.state.sortingStages.length}\n                    />\n                </div>\n\n                <div className=\"container setupControls\">\n                    <AlgoritmSelector\n                        setAlgorithm={this.setAlgorithm}\n                        algorithms={this.state.algorithms}\n                    />\n                    <NumOBarsSelector makeBars={this.makeBars} />\n                </div>\n\n                <div className=\"container liveControls\">\n                    <BackButton stepBackward={this.stepBackward} />\n                    <StartStopButton\n                        isRunning={this.state.isRunning}\n                        togglePlayState={this.togglePlayState}\n                    />\n                    <ForwardButton stepForward={this.stepForward} />\n                    <ResetButton reset={this.makeBars} />\n                    <SpeedSelector setSpeed={this.setSpeed} />\n                </div>\n\n                <div className=\"container metricsContainer\">\n                    <Metrics\n                        swaps={this.state.swaps}\n                        comparisons={this.state.comparisons}\n                    />\n                    <ColourInfo />\n                </div>\n\n                <div className=\"container descriptionContainer\">\n                    <Description\n                        selectedAlgorithm={this.state.selectedAlgorithm}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sorting;\n","import React from \"react\";\nimport NavBar from \"./navigation/navBar\";\nexport default class Home extends React.Component {\n    render() {\n        return <></>;\n    }\n}\n","import React from \"react\";\n\nexport default class Searching extends React.Component {\n    render() {\n        return <div>Searching</div>;\n    }\n}\n","import React from \"react\";\n\nexport default class Pathfinding extends React.Component {\n    render() {\n        return <div>Pathfinding</div>;\n    }\n}\n","import React from \"react\";\nimport \"./navBar.css\";\nimport { Link } from \"react-router-dom\";\nimport { navLinkProps } from \"../../types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// component for the navbar links\n\nexport default class NavLink extends React.Component<navLinkProps> {\n    render() {\n        var extraclass = \"\";\n        if (this.props.current) {\n            // if link set to current, the selected class will be assigned to it, this gives it a diferent text colour and background\n            extraclass = \"selected\";\n        }\n        return (\n            <Link\n                to={this.props.linkTo}\n                className={\"navItem navLink \" + extraclass}\n            >\n                <FontAwesomeIcon\n                    icon={this.props.icon}\n                    rotation={this.props.iconRotation}\n                    className=\"icon\"\n                />\n\n                {this.props.text}\n            </Link>\n        );\n    }\n}\n","import React from \"react\";\nimport \"./navBar.css\";\n\n// component for the navbar title\nexport default class NavTitle extends React.Component {\n    render() {\n        return <div className=\"navItem navTitle\">Algorithm Visuliser</div>;\n    }\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { waffleProps } from \"../../types\";\n\nexport default class NavWaffle extends React.Component<waffleProps> {\n    toggleMenu = () => {\n        this.props.toggleMenu();\n    };\n\n    render() {\n        return (\n            <button className=\"waffle\" onClick={() => this.toggleMenu()}>\n                <FontAwesomeIcon icon={faBars} size=\"2x\" />\n            </button>\n        );\n    }\n}\n","import React from \"react\";\nimport \"./navBar.css\";\nimport { Link } from \"react-router-dom\";\nimport { navDropdownLinkProps } from \"../../types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// component for the navbar links\n\nexport default class NavDropdownLink extends React.Component<navDropdownLinkProps> {\n    render() {\n        var extraclass = \"dropdownLinkUnselected\";\n        if (this.props.current) {\n            extraclass = \"dropdownLinkSelected\";\n        }\n        return (\n            <Link\n                to={this.props.linkTo}\n                className={\"navDropdownLink \" + extraclass}\n            >\n                <FontAwesomeIcon\n                    icon={this.props.icon}\n                    rotation={this.props.iconRotation}\n                    className=\"icon\"\n                />\n\n                {this.props.text}\n            </Link>\n        );\n    }\n}\n","import React from \"react\";\nimport {\n    faHome,\n    faSortAmountDownAlt,\n    faSearch,\n    faRoute,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NavDropdownLink from \"./navDropdownLink\";\nimport { navDropdownProps } from \"../../types\";\n\nexport default class NavDropdown extends React.Component<navDropdownProps> {\n    render() {\n        var extraClass = \"dropdownHidden\";\n        if (this.props.menuActive) {\n            extraClass = \"dropdownShow\";\n        }\n        return (\n            <div className={\"navDropdown \" + extraClass}>\n                <NavDropdownLink\n                    icon={faHome}\n                    text=\"Home\"\n                    current={this.props.page == \"home\"}\n                    linkTo=\"\"\n                ></NavDropdownLink>\n                <NavDropdownLink\n                    icon={faSortAmountDownAlt}\n                    text=\"Sorting\"\n                    current={this.props.page == \"sorting\"}\n                    iconRotation={270}\n                    linkTo=\"sorting\"\n                ></NavDropdownLink>\n                <NavDropdownLink\n                    icon={faSearch}\n                    text=\"Searching\"\n                    current={this.props.page == \"searching\"}\n                    linkTo=\"searching\"\n                ></NavDropdownLink>\n                <NavDropdownLink\n                    icon={faRoute}\n                    text=\"Pathfinding\"\n                    current={this.props.page == \"pathfinding\"}\n                    linkTo=\"pathfinding\"\n                ></NavDropdownLink>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport \"./navBar.css\";\nimport NavLink from \"./navLink\";\nimport NavTitle from \"./navTitle\";\nimport {\n    faHome,\n    faSortAmountDownAlt,\n    faSearch,\n    faRoute,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { navBarProps, navBarState } from \"../../types\";\nimport NavWaffle from \"./navWaffle\";\nimport NavDropdown from \"./navDropdown\";\n\n// component for the nav bar\nexport default class NavBar extends React.Component<navBarProps, navBarState> {\n    state = {\n        menuActive: false,\n    };\n\n    toggleMenu = () => {\n        console.log(\"test\");\n        this.setState((prevstate) => ({\n            menuActive: !prevstate.menuActive,\n        }));\n    };\n\n    render() {\n        return (\n            <nav className=\"navBar\">\n                <div className=\"navPart\">\n                    <NavTitle />\n                </div>\n                {/* links are wrapped inside a container div so that they are kept together */}\n                <div className=\"navPart\">\n                    <NavLink\n                        icon={faHome}\n                        text=\"Home\"\n                        current={this.props.page == \"home\"}\n                        linkTo=\"\"\n                    ></NavLink>\n                    <NavLink\n                        icon={faSortAmountDownAlt}\n                        text=\"Sorting\"\n                        current={this.props.page == \"sorting\"}\n                        iconRotation={270}\n                        linkTo=\"sorting\"\n                    ></NavLink>\n                    <NavLink\n                        icon={faSearch}\n                        text=\"Searching\"\n                        current={this.props.page == \"searching\"}\n                        linkTo=\"searching\"\n                    ></NavLink>\n                    <NavLink\n                        icon={faRoute}\n                        text=\"Pathfinding\"\n                        current={this.props.page == \"pathfinding\"}\n                        linkTo=\"pathfinding\"\n                    ></NavLink>\n                </div>\n                <NavWaffle toggleMenu={this.toggleMenu} />\n                <NavDropdown\n                    menuActive={this.state.menuActive}\n                    page={this.props.page}\n                />\n            </nav>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Sorting from \"./components/sorting/Sorting\";\nimport { Route, Link, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Searching from \"./components/searching/Searching\";\nimport Pathfinding from \"./components/pathfinding/Pathfinding\";\nimport NavBar from \"./components/navigation/navBar\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\">\n                <NavBar page=\"home\" />\n                <Home />\n            </Route>\n            <Route path=\"/sorting\">\n                <NavBar page=\"sorting\" />\n                <Sorting />\n            </Route>\n            <Route path=\"/searching\">\n                <NavBar page=\"searching\" />\n                <Searching />\n            </Route>\n            <Route path=\"/pathfinding\">\n                <NavBar page=\"pathfinding\" />\n                <Pathfinding />\n            </Route>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}